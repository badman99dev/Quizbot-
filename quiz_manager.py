# quiz_manager.py
import os
from supabase import create_client, Client

# --- Database Connection ---
url: str = os.environ.get("SUPABASE_URL")
key: str = os.environ.get("SUPABASE_KEY")
supabase: Client = None
if url and key:
    supabase = create_client(url, key)
else:
    print("‚ö†Ô∏è WARNING: SUPABASE_URL or SUPABASE_KEY not found.")

# ‡§Ø‡§π ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§Æ‡•á‡§Æ‡•ã‡§∞‡•Ä (‡§ï‡•à‡§∂) ‡§π‡•à, ‡§ú‡•ã ‡§∂‡•Å‡§∞‡•Ç ‡§Æ‡•á‡§Ç ‡§ñ‡§æ‡§≤‡•Ä ‡§π‡•ã‡§ó‡•Ä
QUIZ_CACHE = {}

def get_quiz_set(set_id: str):
    """
    "‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü" ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®: ‡§™‡§π‡§≤‡•á ‡§ï‡•à‡§∂ ‡§Æ‡•á‡§Ç ‡§ñ‡•ã‡§ú‡§§‡§æ ‡§π‡•à, ‡§Ö‡§ó‡§∞ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ ‡§§‡•ã Supabase ‡§Æ‡•á‡§Ç ‡§ñ‡•ã‡§ú‡§§‡§æ ‡§π‡•à‡•§
    """
    # 1. ‡§™‡§π‡§≤‡•á ‡§ï‡•à‡§∂ ‡§Æ‡•á‡§Ç ‡§¶‡•á‡§ñ‡•ã
    if set_id in QUIZ_CACHE:
        print(f"‚úÖ Found '{set_id}' in cache.")
        return QUIZ_CACHE[set_id]

    # 2. ‡§Ö‡§ó‡§∞ ‡§ï‡•à‡§∂ ‡§Æ‡•á‡§Ç ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ, ‡§§‡•ã Supabase ‡§Æ‡•á‡§Ç ‡§ñ‡•ã‡§ú‡•ã
    if not supabase:
        return None

    print(f"üü° '{set_id}' not in cache. Searching in Supabase...")
    try:
        response = supabase.table('quizzes').select('name', 'questions').eq('set_id', set_id).single().execute()
        
        if response.data:
            print(f"üëç Found '{set_id}' in Supabase. Adding to cache.")
            # 3. Supabase ‡§Æ‡•á‡§Ç ‡§Æ‡§ø‡§≤ ‡§ó‡§Ø‡§æ, ‡§§‡•ã ‡§â‡§∏‡•á ‡§ï‡•à‡§∂ ‡§Æ‡•á‡§Ç ‡§∏‡•á‡§µ ‡§ï‡§∞ ‡§≤‡•ã
            QUIZ_CACHE[set_id] = response.data
            return response.data
        else:
            # 4. ‡§ï‡§π‡•Ä‡§Ç ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ
            print(f"‚ùå '{set_id}' not found anywhere.")
            return None
    except Exception as e:
        print(f"Error fetching from Supabase: {e}")
        return None

def get_all_sets():
    """
    ‡§Ø‡§π ‡§´‡§Ç‡§ï‡•ç‡§∂‡§® ‡§∏‡§≠‡•Ä ‡§ï‡•ç‡§µ‡§ø‡§ú ‡§ï‡•Ä ‡§≤‡§ø‡§∏‡•ç‡§ü ‡§≤‡§æ‡§§‡§æ ‡§π‡•à ‡§§‡§æ‡§ï‡§ø ‡§∏‡•ç‡§ü‡§æ‡§∞‡•ç‡§ü ‡§Æ‡•á‡§®‡•Ç ‡§¨‡§® ‡§∏‡§ï‡•á‡•§
    ‡§Ø‡§π ‡§π‡§Æ‡•á‡§∂‡§æ Supabase ‡§∏‡•á ‡§≤‡•á‡§ü‡•á‡§∏‡•ç‡§ü ‡§≤‡§ø‡§∏‡•ç‡§ü ‡§≤‡§æ‡§è‡§ó‡§æ‡•§
    """
    if not supabase:
        return {}
        
    try:
        response = supabase.table('quizzes').select('set_id', 'name').execute()
        if response.data:
            # Supabase ‡§∏‡•á ‡§Æ‡§ø‡§≤‡•Ä ‡§≤‡§ø‡§∏‡•ç‡§ü ‡§ï‡•ã ‡§∏‡§π‡•Ä ‡§´‡•â‡§∞‡•ç‡§Æ‡•á‡§ü ‡§Æ‡•á‡§Ç ‡§¨‡§¶‡§≤‡•ã
            all_sets = {item['set_id']: {'name': item['name']} for item in response.data}
            # ‡§ï‡•à‡§∂ ‡§ï‡•ã ‡§≠‡•Ä ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞ ‡§¶‡•ã
            for set_id, data in all_sets.items():
                if set_id not in QUIZ_CACHE:
                    QUIZ_CACHE[set_id] = {}
                QUIZ_CACHE[set_id]['name'] = data['name']
            return all_sets
        return {}
    except Exception as e:
        print(f"Error fetching all sets from Supabase: {e}")
        return {}
